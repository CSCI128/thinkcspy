<?xml version="1.0"?>
<section xml:id="strings_string-methods">
  <title>String Methods</title>
  <introduction>
  <p>We previously used a few functions like <c>print()</c> and <c>input()</c>.  A <b>method</b> is a function that is attached to a specific Python object. 
    To access this function, we write the object, then a dot <c>.</c>, and then the name of the method.   The "dot notation" is the way we connect the name of an object to the name of a method
    it can perform. For example, we can write <c>ss.upper()</c> when we wanted the string <c>ss</c> to perform the <c>upper()</c> method to create an upper-case version of itself.</p>
  <p>Remember that Strings are objects. Each string instance has its own attributes and methods. The most important attribute of the string is the collection of characters. There are a wide variety of methods. Try the following program.</p>
  <program xml:id="chp08_upper" interactive="activecode" language="python">
    <input>
ss = "Hello, World"
print(ss.upper())

tt = ss.lower()
print(tt)
        </input>
  </program>
  <p>In this example, <c>upper</c> is a method that can be invoked on any string object
            to create a new string in which all the
            characters are in uppercase.  <c>lower</c> works in a similar fashion changing all characters in the string
            to lowercase.  (The original string <c>ss</c> remains unchanged.  A new string <c>tt</c> is created.)</p>
  <p>In addition to <c>upper</c> and <c>lower</c>, the following table provides a summary of some other useful string methods.  There are a few activecode examples that follow so that you can try them out.</p>
  <table>
    <tabular>
      <row header="yes">
        <cell>
                            Method
                        </cell>
        <cell>
                            Parameters
                        </cell>
        <cell>
                            Description
                        </cell>
      </row>
      <row>
        <cell>
                            upper
                        </cell>
        <cell>
                            none
                        </cell>
        <cell>
                            Returns a string in all uppercase
                        </cell>
      </row>
      <row>
        <cell>
                            lower
                        </cell>
        <cell>
                            none
                        </cell>
        <cell>
                            Returns a string in all lowercase
                        </cell>
      </row>
      <row>
        <cell>
                            capitalize
                        </cell>
        <cell>
                            none
                        </cell>
        <cell>
                            Returns a string with first character capitalized, the rest lower
                        </cell>
      </row>
      <row>
        <cell>
                            strip
                        </cell>
        <cell>
                            none
                        </cell>
        <cell>
                            Returns a string with the leading and trailing whitespace removed
                        </cell>
      </row>
      <row>
        <cell>
                            lstrip
                        </cell>
        <cell>
                            none
                        </cell>
        <cell>
                            Returns a string with the leading whitespace removed
                        </cell>
      </row>
      <row>
        <cell>
                            rstrip
                        </cell>
        <cell>
                            none
                        </cell>
        <cell>
                            Returns a string with the trailing whitespace removed
                        </cell>
      </row>
      <row>
        <cell>
                            count
                        </cell>
        <cell>
                            item
                        </cell>
        <cell>
                            Returns the number of occurrences of item
                        </cell>
      </row>
      <row>
        <cell>
                            replace
                        </cell>
        <cell>
                            old, new
                        </cell>
        <cell>
                            Replaces all occurrences of old substring with new
                        </cell>
      </row>
      <row>
        <cell>
                            center
                        </cell>
        <cell>
                            width
                        </cell>
        <cell>
                            Returns a string centered in a field of width spaces
                        </cell>
      </row>
      <row>
        <cell>
                            ljust
                        </cell>
        <cell>
                            width
                        </cell>
        <cell>
                            Returns a string left justified in a field of width spaces
                        </cell>
      </row>
      <row>
        <cell>
                            rjust
                        </cell>
        <cell>
                            width
                        </cell>
        <cell>
                            Returns a string right justified in a field of width spaces
                        </cell>
      </row>
      <row>
        <cell>
                            find
                        </cell>
        <cell>
                            item
                        </cell>
        <cell>
                            Returns the leftmost index where the substring item is found, or -1 if not found
                        </cell>
      </row>
      <row>
        <cell>
                            rfind
                        </cell>
        <cell>
                            item
                        </cell>
        <cell>
                            Returns the rightmost index where the substring item is found, or -1 if not found
                        </cell>
      </row>
      <row>
        <cell>
                            index
                        </cell>
        <cell>
                            item
                        </cell>
        <cell>
                            Like find except causes a runtime error if item is not found
                        </cell>
      </row>
      <row>
        <cell>
                            rindex
                        </cell>
        <cell>
                            item
                        </cell>
        <cell>
                            Like rfind except causes a runtime error if item is not found
                        </cell>
      </row>
    </tabular>
  </table>
  <p>You should experiment with these
            methods so that you understand what they do.  Note once again that the methods that return strings do not
            change the original.  You can also consult the <url href="https://docs.python.org/3/library/stdtypes.html#string-methods" visual="https://docs.python.org/3/library/stdtypes.html#string-methods">Python documentation for strings</url>.</p>
  <program xml:id="ch08_methods1" interactive="activecode" language="python">
    <input>
ss = "    Hello, World    "

els = ss.count("l")
print(els)

print("***" + ss.strip() + "***")
print("***" + ss.lstrip() + "***")
print("***" + ss.rstrip() + "***")

news = ss.replace("o", "***")
print(news)
        </input>
  </program>
  <program xml:id="ch08_methods2" interactive="activecode" language="python">
    <input>
food = "banana bread"
print(food.capitalize())

print("*" + food.center(25) + "*")
print("*" + food.ljust(25) + "*")     # stars added to show bounds
print("*" + food.rjust(25) + "*")

print(food.find("e"))
print(food.find("na"))
print(food.find("b"))

print(food.rfind("e"))
print(food.rfind("na"))
print(food.rfind("b"))

print(food.index("e"))
        </input>
  </program>
  <p>
    <term>Check your understanding</term>
  </p>
  <exercise label="test_question8_3_1">
    <statement>
      <p>What is printed by the following statements?</p>
      <program language="python">
        <input>
s = "python rocks"
print(s.count("o") + s.count("p"))
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>0</p>
        </statement>
        <feedback>
                    There are definitely o and p characters.
                </feedback>
      </choice>
      <choice>
        <statement>
          <p>2</p>
        </statement>
        <feedback>
                    There are 2 o characters but what about p?
                </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>3</p>
        </statement>
        <feedback>
                    Yes, add the number of o characters and the number of p characters.
                </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="test_question8_3_2">
    <statement>
      <p>What is printed by the following statements?</p>
      <program language="python">
        <input>
s = "python rocks"
print(s[1] * s.index("n"))
</input>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>yyyyy</p>
        </statement>
        <feedback>
                    Yes, s[1] is y and the index of n is 5, so 5 y characters.  It is important to realize that the index method has precedence over the repetition operator.  Repetition is done last.
                </feedback>
      </choice>
      <choice>
        <statement>
          <p>55555</p>
        </statement>
        <feedback>
                    Close.  5 is not repeated, it is the number of times to repeat.
                </feedback>
      </choice>
      <choice>
        <statement>
          <p>n</p>
        </statement>
        <feedback>
                    This expression uses the index of n
                </feedback>
      </choice>
      <choice>
        <statement>
          <p>Error, you cannot combine all those things together.</p>
        </statement>
        <feedback>
                    This is fine, the repetition operator used the result of indexing and the index method.
                </feedback>
      </choice>
    </choices>
  </exercise>
</introduction>
</section>
