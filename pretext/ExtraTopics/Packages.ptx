<?xml version="1.0"?>
<section xml:id="extratopics-packages">
  <title>Packages and Dependencies</title>
  


  <p>
    Hi everyone, there's a bit of confusion going around with requirements.txt. This is simply a file in which you specify your project's dependencies, minus those which are already bundled into Python (e.g. csv).

  You only need to provide this file if you're using external dependencies (numpy, scipy, sklearn, etc). The autograder has matplotlib bundled with it which is why you don't have to include it.

  One easy way to generate this file is by running this command in the terminal (while navigated to the directory of your final project):

  pip freeze > requirements.txt

  Breakdown of what's happening (aside from generating the proper requirements.txt file):
  pip is Python's dependency (aka "package") manager
  freeze is just the command, no idea why it's called freeze. Educated guess: I think it's because it's "freezing" your dependencies at a moment in time (or in other words, at a specific version) and saving them to a file.
  > is the Linux output redirection operator, which is going to take the result of pip freeze and redirect it to the file you provided, which is requirements.txt

  That's it! Your requirements.txt will be in a format like:

  numpy==1.26.2


  (CS majors: read on for why this isn't great)

  So actually, this will freeze ALL of your requirements. I ran this on my computer and had like a 100 line file of tons of dependencies, and we want people to install only what they have to (we want to minimize overhead/space taken up).

  Probably the best way to do this is to pip show DEPENDENCY where DEPENDENCY is something like numpy, find the version, and type it into requirements.txt  in the format listed above. There are also packages (ironically) that do this.

  You can also view all packages (and their versions) that people from around the world have created on PyPI. This even includes stuff TA Greg made custom for the autograder, and is also why we made you all install Anaconda (which, for the most part, automatically dealt with this)!
  </p>


</section>
